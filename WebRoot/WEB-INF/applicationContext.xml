<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:cache="http://www.springframework.org/schema/cache"	
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
			http://www.springframework.org/schema/data/repository
            http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd
            http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">
    
    <context:annotation-config />
    <cache:annotation-driven cache-manager="cacheManager" />
    
    <!-- 自动扫描并注解 -->
    <context:component-scan base-package="com.dorm" />
    <!-- 加载hibenate.properties -->
    <context:property-placeholder location="classpath:/hibernate.properties" />
    
    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <!-- 基本属性 url、user、password --> 
        <property name="url" value="${dataSource.url}" />  
        <property name="username" value="${dataSource.username}" />  
        <property name="password" value="${dataSource.password}" /> 
        <property name="driverClassName" value="${dataSource.driverClassName}" />
    </bean>
    	
	 <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="persistenceProvider" ref="persistenceProvider" />
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
        <property name="jpaDialect" ref="jpaDialect" />
 
        <property name="jpaProperties">
            <props>
               <prop key="hibernate.dialect">${dataSource.dialect}</prop>
			   <prop key="hibernate.hbm2ddl.auto">${dataSource.hbm2ddl.auto}</prop>
			   <!-- 避免重复打印sql -->
			   <prop key="hibernate.show_sql">${dataSource.show_sql}</prop>
			   <prop key="hibernate.format_sql">${dataSource.format_sql}</prop>
            </props>
        </property>
        
        <property name="packagesToScan">
			<list>
				<value>com.dorm.entity</value>
		    </list>
		</property>	       
    </bean>
	
	<bean id="persistenceProvider"
        class="org.hibernate.ejb.HibernatePersistence" />
         
    <bean id="jpaVendorAdapter"
        class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="MYSQL" />
    </bean>
     
    <bean id="jpaDialect"
        class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
 
    <jpa:repositories base-package="com.dorm.dao"
        entity-manager-factory-ref="entityManagerFactory" 
        transaction-manager-ref="txManager" />
        
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
        p:cache-manager-ref="ehcache">
        </bean>    
        
    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
        p:config-location="classpath:spring-ehcache.xml" />       
   

    <bean id="txManager"
        class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory"
            ref="entityManagerFactory" />
    </bean>
	
	<tx:annotation-driven transaction-manager="txManager" />
	    
		    
	<aop:config>
	<!-- 只对业务层进行开启事务  -->
		<aop:pointcut expression="execution(public * com.dorm.service.impl.*.*(..))"
			id="businessService" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="businessService" />
		
		
		<aop:aspect id="aspect" ref="aspectBean">
		    <aop:pointcut expression="execution(public * com.dorm.controller.*.*(..))" id="businessService1"/>
		    <aop:before pointcut-ref="businessService1" method="doBefore"/>
		    <aop:after-throwing  pointcut-ref="businessService1" throwing="e" method="doAfterThrow" />    
            <aop:after pointcut-ref="businessService1" method="doAfter"/>    
            <aop:around pointcut-ref="businessService1" method="doAround"/>            
		</aop:aspect> 
		
	</aop:config> 
	
	<bean id="aspectBean" class="com.dorm.util.Aspect" />
	 <tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>	
		
		    <tx:method name="find*" read-only="true" propagation="NOT_SUPPORTED" />
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />        
                
		</tx:attributes>
	</tx:advice>
	
	
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">  
                <property name="config">  
                        <bean class="com.google.code.kaptcha.util.Config">  
                                <!--通过构造函数注入属性值 -->  
                                <constructor-arg type="java.util.Properties">  
                                        <props>  
                                            <!-- 验证码宽度 -->  
                                            <prop key="kaptcha.image.width">80</prop>   
                                            <!-- 验证码高度 -->  
                                            <prop key="kaptcha.image.height">30</prop>  
                                            <!-- 生成验证码内容范围 -->  
                                            <prop key="kaptcha.textproducer.char.string">0123456789</prop>  
                                            <!-- 验证码个数 -->  
                                            <prop key="kaptcha.textproducer.char.length">4</prop>  
                                            <!-- 是否有边框 -->  
                                            <prop key="kaptcha.border">yes</prop>  
                                            <!-- 边框颜色 -->  
                                            <prop key="kaptcha.border.color">black</prop>  
                                            <!-- 边框厚度 -->  
                                            <prop key="kaptcha.border.thickness">1</prop>  
                                            <!-- 验证码字体颜色 -->  
                                            <prop key="kaptcha.textproducer.font.color">black</prop>  
                                            <!-- 验证码字体大小 -->  
                                            <prop key="kaptcha.textproducer.font.size">25</prop>  
                                            <!-- 验证码所属字体样式 -->  
                                            <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>  
                                                 
                                            <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>  
                                            <!-- 干扰线颜色 -->
                                            <!--<prop key="kaptcha.noise.color">blue</prop>  
                                            --><!-- 验证码文本字符间距 -->  
                                            <prop key="kaptcha.textproducer.char.space">3</prop>
                                              
                                            <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.NoWater</prop>  
                                           </props>  
                                </constructor-arg>  
                        </bean>  
                </property>  
         </bean>  
</beans>